{"version":3,"sources":["helpers/xero-header.js","pages/Activity/ActivityCard.js","pages/Filter/CityFilter.js","pages/Filter/TimeFilter.js","pages/Filter/LocationFilter.js","pages/Filter/TypeFilter.js","pages/Filter/Filter.js","pages/HomePage.js"],"names":["NOOP","XERO","window","Header","updateNavigation","bus","on","ActivityCard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","structural","className","href","props","link","target","rel","src","concat","imagePath","alt","name","Component","options","label","CityFilter","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","isOptionSelected","selectedCities","includes","handleCityChange","removeCity","addCity","render","select_box_default","inputGroupClasses","labelText","buttonContent","map","find","option","join","closeAfterSelection","onSelect","islabelHidden","_ref","select_box","id","isSelected","showCheckboxes","TimeFilter","selectedTimes","handleTimeChange","removeTime","addTime","LocationFilter","selectedLocations","handleLocationChange","removeLocation","addLocation","TypeFilter","selectedTypes","handleTypeChange","removeType","addType","Filter","state","cities","time","locations","types","setState","filter","city","type","location","Filter_CityFilter","Filter_TimeFilter","Filter_TypeFilter","Filter_LocationFilter","prevProps","prevState","onChange","HomePage","activities","onFilterChange","query","console","log","activity","some","history","newNavId","url","selectedNavId","push","react","title","contentClassName","actions","primaryAction","button_default","size","isLink","variant","secondaryAction","style","borderTop","pages_Filter_Filter","objectWithoutProperties","pages_Activity_ActivityCard","injectIntl"],"mappings":"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","file":"static/js/4.357e6829.chunk.js","sourcesContent":["const NOOP = () => {};\n\nconst XERO = window.XERO || {\n  Header: {\n    updateNavigation: NOOP\n  },\n  bus: {\n    on: NOOP\n  }\n};\n\nexport default function(history, newNavId) {\n  XERO && XERO.Header && XERO.Header.updateNavigation && XERO.Header.updateNavigation(newNavId);\n  XERO.bus.on(\"header:routedNavigation\", (url, selectedNavId) => {\n    history.push(url);\n  });\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ActivityCard.css\";\n\nimport { XUIPanel, XUIPanelSection } from \"@xero/xui/react/structural\";\n\nexport class ActivityCard extends Component {\n  render() {\n    return (\n      <XUIPanel>\n        <XUIPanelSection>\n          <a className=\"xui-text-decoration-none\" href={this.props.link} target=\"blank\"\n    \t\t\trel=\"noopener noreferrer\">\n            <div className=\"xui-padding-small activity-card\">\n              <img\n                className=\"activity-card-image\"\n                src={`assets/${this.props.imagePath}`}\n                alt=\"activity\"\n              />\n              <div className=\"xui-text-label xui-text-align-center activity-card-title xui-padding-top-small\">\n                {this.props.name}\n              </div>\n            </div>\n          </a>\n        </XUIPanelSection>\n      </XUIPanel>\n    );\n  }\n}\n\nActivityCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  imagePath: PropTypes.string,\n  link: PropTypes.string,\n};\n\nexport default ActivityCard;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectBox, { SelectBoxOption } from \"@xero/xui/react/select-box\";\n\nconst options = [\n  { key: \"AKL\", label: \"Auckland\" },\n  { key: \"WLG\", label: \"Wellington\" }\n];\n\nexport class CityFilter extends Component {\n  isOptionSelected = key => this.props.selectedCities.includes(key);\n\n  handleCityChange = key => {\n    if (this.isOptionSelected(key)) {\n      this.props.removeCity(key);\n      return;\n    }\n\n    this.props.addCity(key);\n  };\n\n  render = () => (\n    <SelectBox\n      inputGroupClasses={this.props.className}\n      labelText=\"Select city\"\n      buttonContent={\n        this.props.selectedCities\n          .map(key => options.find(option => option.key === key).label)\n          .join(\", \") || \"Select city\"\n      }\n      closeAfterSelection={false}\n      onSelect={this.handleCityChange}\n      islabelHidden\n    >\n      {options.map(({ key, label }) => (\n        <SelectBoxOption\n          key={key}\n          value={key}\n          id={key}\n          isSelected={this.isOptionSelected(key)}\n          showCheckboxes\n        >\n          {label}\n        </SelectBoxOption>\n      ))}\n    </SelectBox>\n  );\n}\n\nCityFilter.propTypes = {\n  selectedCities: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addCity: PropTypes.func.isRequired,\n  removeCity: PropTypes.func.isRequired\n};\n\nexport default CityFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectBox, { SelectBoxOption } from \"@xero/xui/react/select-box\";\n\nconst options = [\n  { key: \"Business\", label: \"Office hours\" },\n  { key: \"After\", label: \"After hours\" }\n];\n\nexport class TimeFilter extends Component {\n  isOptionSelected = key => this.props.selectedTimes.includes(key);\n\n  handleTimeChange = key => {\n    if (this.isOptionSelected(key)) {\n      this.props.removeTime(key);\n      return;\n    }\n\n    this.props.addTime(key);\n  };\n\n  render = () => (\n    <SelectBox\n      inputGroupClasses={this.props.className}\n      labelText=\"Select Times\"\n      buttonContent={\n        this.props.selectedTimes\n          .map(key => options.find(option => option.key === key).label)\n          .join(\", \") || \"Select Times\"\n      }\n      closeAfterSelection={false}\n      onSelect={this.handleTimeChange}\n      islabelHidden\n    >\n      {options.map(({ key, label }) => (\n        <SelectBoxOption\n          key={key}\n          value={key}\n          id={key}\n          isSelected={this.isOptionSelected(key)}\n          showCheckboxes\n        >\n          {label}\n        </SelectBoxOption>\n      ))}\n    </SelectBox>\n  );\n}\n\nTimeFilter.propTypes = {\n  selectedTimes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addTime: PropTypes.func.isRequired,\n  removeTime: PropTypes.func.isRequired\n};\n\nexport default TimeFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectBox, { SelectBoxOption } from \"@xero/xui/react/select-box\";\n\nconst options = [\n  { key: \"Virtual\", label: \"Virtual\" },\n  { key: \"Inoffice\", label: \"In office\" },\n  { key: \"Offsite\", label: \"Offsite\" }\n];\n\nexport class LocationFilter extends Component {\n  isOptionSelected = key => this.props.selectedLocations.includes(key);\n\n  handleLocationChange = key => {\n    if (this.isOptionSelected(key)) {\n      this.props.removeLocation(key);\n      return;\n    }\n\n    this.props.addLocation(key);\n  };\n\n  render = () => (\n    <SelectBox\n      inputGroupClasses={this.props.className}\n      labelText=\"Select location\"\n      buttonContent={\n        this.props.selectedLocations\n          .map(key => options.find(option => option.key === key).label)\n          .join(\", \") || \"Select location\"\n      }\n      closeAfterSelection={false}\n      onSelect={this.handleLocationChange}\n      islabelHidden\n    >\n      {options.map(({ key, label }) => (\n        <SelectBoxOption\n          key={key}\n          value={key}\n          id={key}\n          isSelected={this.isOptionSelected(key)}\n          showCheckboxes\n        >\n          {label}\n        </SelectBoxOption>\n      ))}\n    </SelectBox>\n  );\n}\n\nLocationFilter.propTypes = {\n  selectedLocations: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addLocation: PropTypes.func.isRequired,\n  removeLocation: PropTypes.func.isRequired\n};\n\nexport default LocationFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SelectBox, { SelectBoxOption } from \"@xero/xui/react/select-box\";\n\nconst options = [\n  { key: \"Profdev\", label: \"Professional development\" },\n  { key: \"Wellbeing\", label: \"Wellbeing\" },\n  { key: \"Presenting\", label: \"Presenting\" },\n  { key: \"Social\", label: \"Social\" },\n  { key: \"Volunteer\", label: \"Volunteer\" }\n];\n\nexport class TypeFilter extends Component {\n  isOptionSelected = key => this.props.selectedTypes.includes(key);\n\n  handleTypeChange = key => {\n    if (this.isOptionSelected(key)) {\n      this.props.removeType(key);\n      return;\n    }\n\n    this.props.addType(key);\n  };\n\n  render = () => (\n    <SelectBox\n      inputGroupClasses={this.props.className}\n      labelText=\"Select Type\"\n      buttonContent={\n        this.props.selectedTypes\n          .map(key => options.find(option => option.key === key).label)\n          .join(\", \") || \"Select Type\"\n      }\n      closeAfterSelection={false}\n      onSelect={this.handleTypeChange}\n      islabelHidden\n    >\n      {options.map(({ key, label }) => (\n        <SelectBoxOption\n          key={key}\n          value={key}\n          id={key}\n          isSelected={this.isOptionSelected(key)}\n          showCheckboxes\n        >\n          {label}\n        </SelectBoxOption>\n      ))}\n    </SelectBox>\n  );\n}\n\nTypeFilter.propTypes = {\n  selectedTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  addType: PropTypes.func.isRequired,\n  removeType: PropTypes.func.isRequired\n};\n\nexport default TypeFilter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CityFilter from \"./CityFilter\";\nimport TimeFilter from \"./TimeFilter\";\nimport LocationFilter from \"./LocationFilter\";\nimport TypeFilter from \"./TypeFilter\";\n\nexport class Filter extends Component {\n  state = {\n    cities: [],\n    time: [],\n    locations: [],\n    types: []\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.props.onChange(this.state);\n    }\n  }\n\n  addCity = key => {\n    this.setState(state => {\n      return { cities: state.cities.concat(key) };\n    });\n  };\n\n  removeCity = key => {\n    this.setState(state => {\n      return { cities: state.cities.filter(city => city !== key) };\n    });\n  };\n\n  addTime = key => {\n    this.setState(state => {\n      return { time: state.time.concat(key) };\n    });\n  };\n\n  removeTime = key => {\n    this.setState(state => {\n      return { time: state.time.filter(city => city !== key) };\n    });\n  };\n\n  addType = key => {\n    this.setState(state => {\n      return { types: state.types.concat(key) };\n    });\n  };\n\n  removeType = key => {\n    this.setState(state => {\n      return { types: state.types.filter(type => type !== key) };\n    });\n  };\n\n  addLocation = key => {\n    this.setState(state => {\n      return { locations: state.locations.concat(key) };\n    });\n  };\n\n  removeLocation = key => {\n    this.setState(state => {\n      return {\n        locations: state.locations.filter(location => location !== key)\n      };\n    });\n  };\n\n  render = () => (\n    <div className=\"xui-row-grid xui-margin-bottom\">\n      <div className=\"xui-column-3-of-12-wide xui-column-4-of-12-medium xui-column-12-of-12 xui-padding-bottom-small\">\n        <CityFilter\n          selectedCities={this.state.cities}\n          addCity={this.addCity}\n          removeCity={this.removeCity}\n        />\n      </div>\n      <div className=\"xui-column-3-of-12-wide xui-column-4-of-12-medium xui-column-12-of-12 xui-padding-bottom-small\">\n        <TimeFilter\n          selectedTimes={this.state.time}\n          addTime={this.addTime}\n          removeTime={this.removeTime}\n        />\n      </div>\n      <div className=\"xui-column-3-of-12-wide xui-column-4-of-12-medium xui-column-12-of-12 xui-padding-bottom-small\">\n        <TypeFilter\n          selectedTypes={this.state.types}\n          addType={this.addType}\n          removeType={this.removeType}\n        />\n      </div>\n      <div className=\"xui-column-3-of-12-wide xui-column-4-of-12-medium xui-column-12-of-12 xui-padding-bottom-small\">\n        <LocationFilter\n          selectedLocations={this.state.locations}\n          addLocation={this.addLocation}\n          removeLocation={this.removeLocation}\n        />\n      </div>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default Filter;\n","import React, { Component, Fragment } from \"react\";\nimport { intlShape, injectIntl } from \"react-intl\";\n\nimport { XUIActions } from \"@xero/xui/react/structural\";\nimport XUIButton from \"@xero/xui/react/button\";\nimport { XUIPageHeader } from \"@xero/xui/react/structural\";\n\nimport headerHelper from \"../helpers/xero-header\";\nimport ActivityCard from \"./Activity/ActivityCard\";\nimport Filter from \"./Filter\";\n\nimport { activities } from \"../api/db\";\n\nclass HomePage extends Component {\n  state = {\n    activities\n  };\n\n  componentDidMount() {\n    headerHelper(this.props.history, \"home\");\n  }\n\n  onFilterChange = query => {\n    console.log(query);\n\n    this.setState({\n      activities: activities.filter(\n        activity =>\n          (query.cities.length === 0 ||\n            activity.cities.some(city => query.cities.includes(city))) &&\n          (query.time.length === 0 ||\n            activity.time.some(time => query.time.includes(time))) &&\n          (query.locations.length === 0 ||\n            activity.locations.some(location =>\n              query.locations.includes(location)\n            )) &&\n          (query.types.length === 0 ||\n            activity.types.some(type => query.types.includes(type)))\n      )\n    });\n  };\n\n  render() {\n    const { activities } = this.state;\n\n    return (\n      <Fragment>\n        <XUIPageHeader\n          title=\"XPlore activities you can get involved in at XERO\"\n          contentClassName=\"xui-page-width-standard\"\n          actions={\n            <XUIActions\n              primaryAction={\n                <XUIButton\n                  key=\"one\"\n                  size=\"small\"\n                  isLink\n                  type=\"button\"\n                  variant=\"standard\"\n                  href=\"https://docs.google.com/forms/d/e/1FAIpQLSeVXJT3MYp3AxHss2XB29UvlmKQ15nxgd3yjnh84ClXZADW3g/viewform?usp=sf_link\"\n                >\n                  Add new/edit opportunity\n                </XUIButton>\n              }\n              secondaryAction={\n                <XUIButton\n                  key=\"two\"\n                  size=\"small\"\n                  isLink\n                  type=\"button\"\n                  variant=\"standard\"\n                  href=\"https://docs.google.com/forms/d/e/1FAIpQLSeJVqYsL0SJUp1124qnPBRuHZmnpfRkFVfkc1SFt0wN6Pyr-g/viewform?usp=sf_link\"\n                >\n                  Give feedback\n                </XUIButton>\n              }\n            />\n          }\n        />\n        <XUIPageHeader\n          contentClassName=\"xui-page-width-standard\"\n          style={{ borderTop: \"1px solid #ccced2\" }}\n        >\n          <div className=\"xui-padding-small\">\n            Sherlock will direct you to the appropriate page or Slack channel\n            where you can learn more about getting involved in these activities.\n            If directed to a person, let them know what you’re interested in!\n          </div>\n        </XUIPageHeader>\n        <div className=\"xui-page-width-standard xui-margin-vertical-xlarge\">\n          <Filter onChange={this.onFilterChange} />\n          <div className=\"xui-row-grid\">\n            {activities.map(({ id, ...props }) => (\n              <div\n                className=\"xui-column-3-of-12-wide xui-column-4-of-12-medium xui-column-12-of-12 xui-padding-bottom-large\"\n                key={id}\n              >\n                <ActivityCard {...props} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  intl: intlShape.isRequired\n};\n\nexport default injectIntl(HomePage);\n"],"sourceRoot":""}